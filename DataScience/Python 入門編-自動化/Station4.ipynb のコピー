{"cells":[{"cell_type":"markdown","metadata":{"id":"VYF0lr22dtau"},"source":["| Version | Published Date| Details |\n","| -- | -- | -- |\n","| ver.1.0.0 | 2023/8/29 | 初版 |\n","| ver.1.0.1 | 2024/6/10 | 誤記を修正 (確認テスト1で最大値を要求していたが、正しくは期待値である) |"]},{"cell_type":"markdown","metadata":{"id":"nuSoRsVJX1jn"},"source":["# Google スプレッドシートで自動化を学ぼう\n","\n","Googleスプレッドシート (Google Sheets) は無料で使えるWebブラウザベースの表計算アプリケーションです。Googleアカウントを持っていればだれでも利用可能であり，便利で機能が豊富であることから Microsoft Office Excel の競合製品になっています。\n","\n","Google Sheets には独自のAPI (APIという単語を知らなければ調べてみましょう) がありますが，それをすべて学んで使うのはやや面倒です。今回は `gspread` というサードパーティーモジュールを使って Google Colab から Google Sheets を利用します。\n","\n","Pythonを使ってスプレッドシートを操作することで、さまざまな情報をスプレッドシートに集約したり、より柔軟な計算処理をおこなうことができます。"]},{"cell_type":"markdown","metadata":{"id":"ZiMOpEiUdta1"},"source":["まずはPythonのパッケージ管理ツールである `pip` を使って `gspread` をアップデートしておきます。"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"jWhbwhz2tbof","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724386883358,"user_tz":-540,"elapsed":14907,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"6bd8a698-0c72-483b-ae3b-41558fe750e9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: gspread in /usr/local/lib/python3.10/dist-packages (6.0.2)\n","Collecting gspread\n","  Downloading gspread-6.1.2-py3-none-any.whl.metadata (11 kB)\n","Requirement already satisfied: google-auth>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from gspread) (2.27.0)\n","Requirement already satisfied: google-auth-oauthlib>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from gspread) (1.2.1)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.12.0->gspread) (5.5.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.12.0->gspread) (0.4.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.12.0->gspread) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib>=0.4.1->gspread) (1.3.1)\n","Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=1.12.0->gspread) (0.6.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (3.2.2)\n","Requirement already satisfied: requests>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (2.32.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (2024.7.4)\n","Downloading gspread-6.1.2-py3-none-any.whl (57 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m57.5/57.5 kB\u001b[0m \u001b[31m1.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: gspread\n","  Attempting uninstall: gspread\n","    Found existing installation: gspread 6.0.2\n","    Uninstalling gspread-6.0.2:\n","      Successfully uninstalled gspread-6.0.2\n","Successfully installed gspread-6.1.2\n"]}],"source":["pip install --upgrade gspread"]},{"cell_type":"markdown","metadata":{"id":"YAhxVoIIdta3"},"source":["パッケージのインストールが完了したら、このColaboratoryの**ランタイムを再起動**しましょう。\n","\n","ページ上部のメニューから [ランタイム] -> [ランタイムを再起動] を実行してください。\n","再起動していない場合、インストールしたパッケージが`import`で正常に読み込まれない場合があります。\n","\n","うまく`import`できない場合はランタイムの再起動を試してみるようにしてください。"]},{"cell_type":"markdown","metadata":{"id":"GSUqkD9vaiQm"},"source":["## Google スプレッドシートを認証する\n","\n","`gspread` を使う前に，まずは `gspread` を認証しましょう。「認証」は、ユーザーが正当なユーザーであることを確認するためのプロセスです。ユーザー名とパスワード、二要素認証、公開鍵暗号などの方法を使って、システムへのアクセスを制限し、セキュリティを保護します。\n","\n","以下のセルを実行すると，自動的にポップアップが開きます。\n","\n","1. Google認証情報へのアクセスの許可\n","2. アクセスを許可するアカウント **(もし複数アカウントでGoogle Colabを使用している場合は注意が必要です)**\n","3. Colabolatory Runtimes に対する Google アカウントへのアクセスを許可\n","\n","の手順でそれぞれ許可しましょう。"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"8oEcHuTiYfyu","executionInfo":{"status":"ok","timestamp":1724387959185,"user_tz":-540,"elapsed":32270,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["from google.colab import auth\n","from google.auth import default\n","import gspread\n","\n","auth.authenticate_user()\n","creds, _ = default()\n","gc = gspread.authorize(creds)"]},{"cell_type":"markdown","metadata":{"id":"ijcwOt-OGq6N"},"source":["## スプレッドシートの作成，アップロード，一覧\n","\n","新規の `Spreadsheet` オブジェクトは，既存のスプレッドシートや，空白のスプレッドシート，アップロードされたスプレッドシートから作成できます。既存のGoogle SheetsのスプレッドシートからSpreadsheetオブジェクトを作成するには，スプレッドシートのIDが必要です。スプレッドシートのIDは，URLの `spreadsheets/d/` と `/edit` の間の部分です。\n","\n","たとえば https://drive.google.com/file/d/13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn/view?usp=sharing のURLのIDは `13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn` です。"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"I8VRpR_rYnEz","colab":{"base_uri":"https://localhost:8080/","height":321},"executionInfo":{"status":"error","timestamp":1724388790642,"user_tz":-540,"elapsed":2332,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"0aff7965-3eb2-453f-8a3c-9392de79cb4a"},"outputs":[{"output_type":"error","ename":"APIError","evalue":"APIError: [400]: Request contains an invalid argument.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAPIError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-9b044a19e230>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mworkbook\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_by_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mworkbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/client.py\u001b[0m in \u001b[0;36mopen_by_key\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    159\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstatus_code\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mHTTPStatus\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFORBIDDEN\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    160\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mPermissionError\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mex\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 161\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mex\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    162\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mspreadsheet\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    163\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/client.py\u001b[0m in \u001b[0;36mopen_by_key\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    153\u001b[0m         \"\"\"\n\u001b[1;32m    154\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 155\u001b[0;31m             \u001b[0mspreadsheet\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSpreadsheet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhttp_client\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"id\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    156\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mAPIError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mex\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    157\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstatus_code\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mHTTPStatus\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mNOT_FOUND\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/spreadsheet.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, http_client, properties)\u001b[0m\n\u001b[1;32m     27\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_properties\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mproperties\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m         \u001b[0mmetadata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfetch_sheet_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     30\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_properties\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"properties\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/spreadsheet.py\u001b[0m in \u001b[0;36mfetch_sheet_metadata\u001b[0;34m(self, params)\u001b[0m\n\u001b[1;32m    228\u001b[0m         \u001b[0;34m:\u001b[0m\u001b[0mrtype\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m         \"\"\"\n\u001b[0;32m--> 230\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclient\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfetch_sheet_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    232\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget_worksheet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mWorksheet\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/http_client.py\u001b[0m in \u001b[0;36mfetch_sheet_metadata\u001b[0;34m(self, id, params)\u001b[0m\n\u001b[1;32m    303\u001b[0m         \u001b[0murl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSPREADSHEET_URL\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mid\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    304\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 305\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"get\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    306\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    307\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/http_client.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, endpoint, params, data, json, files, headers)\u001b[0m\n\u001b[1;32m    126\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 128\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mAPIError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    129\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mbatch_update\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mid\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbody\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mOptional\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mMapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAPIError\u001b[0m: APIError: [400]: Request contains an invalid argument."]}],"source":["workbook = gc.open_by_key('13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn')\n","workbook.title"]},{"cell_type":"markdown","metadata":{"id":"vBfJIcC-HrDP"},"source":["またIDではなくURLを使うことでもスプレッドシートにアクセスすることができます。それ以外にもファイル名を使った `gc.open()` でもスプレッドシートを開くことができます。"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"edjRF_iHGiuG","colab":{"base_uri":"https://localhost:8080/","height":304},"executionInfo":{"status":"error","timestamp":1724388884986,"user_tz":-540,"elapsed":452,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"3c6c2297-f849-4117-e402-4538401e774b"},"outputs":[{"output_type":"error","ename":"NoValidUrlKeyFound","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNoValidUrlKeyFound\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-17dcfc089eed>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mworkbook\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_by_url\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'https://drive.google.com/file/d/13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn/view?usp=sharing'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mworkbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/client.py\u001b[0m in \u001b[0;36mopen_by_url\u001b[0;34m(self, url)\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;34m>>\u001b[0m\u001b[0;34m>\u001b[0m \u001b[0mgc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_by_url\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'https://docs.google.com/spreadsheet/ccc?key=0Bm...FE&hl'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m         \"\"\"\n\u001b[0;32m--> 176\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_by_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mextract_id_from_url\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    177\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mopenall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtitle\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mOptional\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mList\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mSpreadsheet\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/gspread/utils.py\u001b[0m in \u001b[0;36mextract_id_from_url\u001b[0;34m(url)\u001b[0m\n\u001b[1;32m    614\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mm1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroup\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    615\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 616\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mNoValidUrlKeyFound\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    617\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNoValidUrlKeyFound\u001b[0m: "]}],"source":["workbook = gc.open_by_url('https://drive.google.com/file/d/13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn/view?usp=sharing')\n","workbook.id"]},{"cell_type":"markdown","metadata":{"id":"OZRfuzrIIBp5"},"source":["### 空白のスプレッドシートを作成\n","\n","新規に空白のスプレッドシートを作成するには `gc.create()` を使用します。"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"aZu2V_ewHlwp","executionInfo":{"status":"ok","timestamp":1724389008175,"user_tz":-540,"elapsed":4436,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["new_workbook = gc.create('新しいスプレッドシート')"]},{"cell_type":"markdown","metadata":{"id":"w8LPOhkAIxmO"},"source":["ColabにログインしているGoogleアカウントのGoogle Driveを見ると「新しいスプレッドシート」という名のスプレッドシートが追加されているはずです。"]},{"cell_type":"markdown","metadata":{"id":"WjuKZaUm2J6e"},"source":["## スプレッドシートの削除\n","\n","スプレッドシート自体の削除には `del_spreadsheet()` を使います。ゴミ箱に入らず，完全に削除されることに注意してください。"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"YZP086b9Ig1C","executionInfo":{"status":"ok","timestamp":1724389114081,"user_tz":-540,"elapsed":1339,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["gc.del_spreadsheet(new_workbook.id)"]},{"cell_type":"markdown","metadata":{"id":"D1waUqnELB5m"},"source":["自身のGoogleアカウントに紐づくスプレッドシートの一覧は `gc.openall()` を使います。 スプレッドシートのタイトルとidの組み合わせが返ってきます。"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"NOTT2uFRJGpF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724389145255,"user_tz":-540,"elapsed":1014,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"4e5fcaa4-5443-4d04-d3a9-0b03a2808f08"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<Spreadsheet '学会参加者様向けインターン告知シート' id:1Dlulw6IVUpijYkTWb3_n7eSLGTnIqxALpDEW555eoE0>]"]},"metadata":{},"execution_count":6}],"source":["gc.openall()[:10]"]},{"cell_type":"markdown","metadata":{"id":"7r3ONBAdPDor"},"source":["## スプレッドシートの属性\n","\n","ここからの操作は上記のスプレッドシートではなく，自身のドライブにコピーして作成したスプレッドシートを用いて作業をしてください。以下の手順に従いましょう。\n","\n","1.  [サンプルのデータセットが登録されているスプレッドシート](https://drive.google.com/file/d/13maFkPcxHrKm5Pa2pAszmNU_m3-BnpVn/view?usp=sharing) を開く。\n","2. ファイル→コピーを作成 を選択\n","3. わかりやすい場所にコピーを作成する\n","4. コピーが完了したら，自身のドライブに作成したスプレッドシートのURLをコピーする"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"A-PF_xqCTrVE","executionInfo":{"status":"ok","timestamp":1724389443594,"user_tz":-540,"elapsed":1666,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["url = 'https://docs.google.com/spreadsheets/d/1HM-y5Rl75iZLSk7fRqZgXNWMM8Dq3uN5wMScqrm6YPk/edit?gid=626564103#gid=626564103' # ↑でコピーしたスプレッドシートのURLを入力\n","workbook = gc.open_by_url(url)"]},{"cell_type":"markdown","metadata":{"id":"-vgKb5EzWX3-"},"source":["スプレッドシートのURLを直接参照することもできます。"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"ZSP8-JlvUJY_","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1724389449109,"user_tz":-540,"elapsed":438,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"91935f05-e6c1-4474-ba4f-b1f5f31e16b6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'https://docs.google.com/spreadsheets/d/1HM-y5Rl75iZLSk7fRqZgXNWMM8Dq3uN5wMScqrm6YPk'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}],"source":["workbook.url    # スプレッドシートのURL"]},{"cell_type":"markdown","metadata":{"id":"Jo3wcembWbf7"},"source":["スプレッドシートが持つシートにアクセスするには `worksheets()` メソッドを利用します。"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"RN40HsShWI03","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724389729413,"user_tz":-540,"elapsed":439,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"2fc4f141-84d5-4388-b4d5-ca85d2d442db"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<Worksheet 'titanic' id:626564103>]"]},"metadata":{},"execution_count":9}],"source":["workbook.worksheets()   # シートオブジェクトの一覧"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"bwNqIPiYWoXG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724389848281,"user_tz":-540,"elapsed":1017,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"15741dd1-b282-40fa-d864-b683722d3283"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Worksheet 'titanic' id:626564103>"]},"metadata":{},"execution_count":10}],"source":["workbook.worksheets()[0]"]},{"cell_type":"markdown","metadata":{"id":"LQ9MWrP3WzG5"},"source":["`worksheet()` メソッドにシートのタイトルを渡すことでもアクセス可能です。"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"8HMYewumW3lR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724390198620,"user_tz":-540,"elapsed":991,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"535785a2-3d20-4820-b45f-060836b9dbb2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Worksheet 'titanic' id:626564103>"]},"metadata":{},"execution_count":13}],"source":["workbook.worksheet('titanic')"]},{"cell_type":"markdown","metadata":{"id":"c4iATj18Zbd5"},"source":["`add_worksheet()` メソッドを使うと新たにシートを追加できます。"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"N7w047D2M50v","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724389874440,"user_tz":-540,"elapsed":1458,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"0da667c8-456a-4c9c-fdbb-c3922d027717"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<Worksheet 'titanic' id:626564103>, <Worksheet 'newsheet' id:880416990>]"]},"metadata":{},"execution_count":12}],"source":["worksheet = workbook.add_worksheet(title=\"newsheet\", rows=100, cols=20)\n","workbook.worksheets()"]},{"cell_type":"markdown","metadata":{"id":"1_19JuBnZmwE"},"source":["シートを削除するには `del_worksheet()` メソッドを使います。 `newsheet` が削除されていることを確認してください。"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"gPiKu266ZkFf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724390512523,"user_tz":-540,"elapsed":1560,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"7e28daa9-c988-48fa-a295-1902c6df5839"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<Worksheet 'titanic' id:626564103>]"]},"metadata":{},"execution_count":14}],"source":["workbook.del_worksheet(worksheet)\n","workbook.worksheets()"]},{"cell_type":"markdown","metadata":{"id":"RqCxvfV0ZimN"},"source":["オンラインでだれかがスプレッドシートを変更したら `fetch()` メソッドを呼び出します。これにより `Spreadsheet` オブジェクトを更新してオンラインデータを反映できます。"]},{"cell_type":"markdown","metadata":{"id":"rRYajNUzeV7X"},"source":["## スプレッドシートをダウンロードする\n","\n","スプレッドシートをダウンロードする前に，Colab上では少し工夫が必要です。Colabの環境は通常のPythonの実行環境とは異なるからです。 `gspread` やその他のライブラリにとって，実行している環境が通常のPython実行環境なのか，Colab上なのかはわかりません。\n","\n","そのため今回はGoogle DriveをColab上のPython実行環境にマウントし，通常のファイルシステムとして扱うための準備をします。「Googleスプレッドシートを認証する」で行った手順と同様に，ColabからGoogle Driveを扱うための許可をしてください。"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"thZEm21pLiBM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724390669127,"user_tz":-540,"elapsed":26966,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"d174692d-14a9-44cb-ce5f-f30fedb54acd"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","root_path = '/content/drive'\n","drive.mount(root_path)"]},{"cell_type":"markdown","metadata":{"id":"4RZi93y_q981"},"source":["もうひとつの準備として，ファイルを保存するためのパスを指定します。ここでは `os.path.join()` メソッドを用いています。Pythonの文字列連結を使って\n","\n","```python\n","'root_path' + '/' + 'My Drive'\n","```\n","\n","のようにしてもよいのですが `/` を入れ忘れたり余分につけてしまったりとバグを生むことがあります。そのためPythonでパスを編集するには `os.path.join()` を使うようにしましょう。"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"sV5-tkglXhXN","executionInfo":{"status":"ok","timestamp":1724390734937,"user_tz":-540,"elapsed":427,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["import os\n","filename = 'dataset.csv'\n","my_drive_path = os.path.join(root_path, 'My Drive')\n","my_file_path = os.path.join(my_drive_path, filename)"]},{"cell_type":"markdown","metadata":{"id":"aD2V0s6ByD8z"},"source":["続いて `gspread.utils` から `ExportFormat` を `import` し，`csv_data` をバイト列として書き出します。それを `with` 句を使って `my_file_path` に保存します。\n","\n","自身のGoogle Driveを開いてみましょう。 `dataset.csv` という名前のCSVファイルが保存されていることを確認しましょう。今回はCSV形式でファイルを保存していますが，CSVは複数シートを保存できません。先頭のシートのみ保存されることに注意してください。CSV以外の対応ファイル形式については [公式ドキュメント](https://docs.gspread.org/en/latest/api/utils.html#gspread.utils.ExportFormat) を参照してください。"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"Q_gJOIZjprWv","executionInfo":{"status":"ok","timestamp":1724390930798,"user_tz":-540,"elapsed":1020,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["from gspread.utils import ExportFormat\n","\n","csv_data = workbook.export(format=ExportFormat.CSV)\n","with open(my_file_path, 'wb') as f:\n","    f.write(csv_data)"]},{"cell_type":"markdown","metadata":{"id":"Bc8NDDfg5L06"},"source":["## データを読み書きする\n","\n","Excelと同様に，Googleスプレッドシートのシートも値を持ったセルが行と列に並んでいます。 `[]` を用いてセルを読み書きできます。新規にスプレッドシートをつくり，データを追加してみましょう。"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"MD9JOIAe5lwe","executionInfo":{"status":"ok","timestamp":1724391117803,"user_tz":-540,"elapsed":4809,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["workbook = gc.create('新しいスプレッドシート')\n","sheet = workbook.worksheets()[0]    # 最初のスプレッドシートを取得"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"gckJivpt5ooz","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1724391120527,"user_tz":-540,"elapsed":446,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"797f2482-ddf5-49e9-c3b9-8b6fdfa8ea75"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'シート1'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":19}],"source":["sheet.title"]},{"cell_type":"markdown","metadata":{"id":"V_qd-0Wa7JGd"},"source":["セルに値を設定するには `update_acell()` メソッドを使います。"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"f1bxBn8_6fUS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724391174186,"user_tz":-540,"elapsed":1060,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"c69fd158-3f21-47f4-c7b9-333b186f41bc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1GD_PgVVbQwtKHA-JKiZ7U34ZIfw2fm2URRgogNmnfy8',\n"," 'updatedRange': \"'シート1'!A1\",\n"," 'updatedRows': 1,\n"," 'updatedColumns': 1,\n"," 'updatedCells': 1}"]},"metadata":{},"execution_count":20}],"source":["sheet.update_acell('A1', 'Name')"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"XAItn4-T7Ro2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724391174752,"user_tz":-540,"elapsed":568,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"5ef13d09-f558-4001-ad09-3ed20f682d34"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1GD_PgVVbQwtKHA-JKiZ7U34ZIfw2fm2URRgogNmnfy8',\n"," 'updatedRange': \"'シート1'!B1\",\n"," 'updatedRows': 1,\n"," 'updatedColumns': 1,\n"," 'updatedCells': 1}"]},"metadata":{},"execution_count":21}],"source":["sheet.update_acell('B1', 'Age')"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"u2UHucJz7YVQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724391175207,"user_tz":-540,"elapsed":461,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"b7231dcf-eca0-456e-e9da-82485993e9ff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1GD_PgVVbQwtKHA-JKiZ7U34ZIfw2fm2URRgogNmnfy8',\n"," 'updatedRange': \"'シート1'!C1\",\n"," 'updatedRows': 1,\n"," 'updatedColumns': 1,\n"," 'updatedCells': 1}"]},"metadata":{},"execution_count":22}],"source":["sheet.update_acell('C1', 'Favourite Movie')"]},{"cell_type":"markdown","metadata":{"id":"6MYuFEKU7grH"},"source":["セルの値を取得するには `acell()` メソッドを使ってセルの座標を指定したあと，`value` を使います。"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"mEREsWoE61rU","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1724391193592,"user_tz":-540,"elapsed":1560,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"4d3f61f4-4ffd-4269-f786-b14d7edb5286"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Name'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":23}],"source":["sheet.acell('A1').value"]},{"cell_type":"markdown","metadata":{"id":"LcC5WK7r7qRu"},"source":["空のセルにアクセスすると `None` が返ります。"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"8e-M3iCw7Axt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724391197492,"user_tz":-540,"elapsed":564,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"2830f524-99d9-4a2c-f27b-4784b8ae9db1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":24}],"source":["sheet.acell('A2').value is None"]},{"cell_type":"markdown","metadata":{"id":"RmnB4xOU8nSn"},"source":["`cell()` メソッドを用いてx座標とy座標の形式でセルを指定することもできます。Pythonのリストと違いGoogleスプレッドシートの世界では，添字が0ではなく1から始まることに注意してください。\n","\n","座標 `(1, 2)` は `B1` と同じ場所を指します。"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"P9U0SfJf7oHD","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1724391312413,"user_tz":-540,"elapsed":436,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"2021e477-c54c-4b6a-b295-9ad3208cdb47"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Age'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":25}],"source":["sheet.cell(1, 2).value"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"7wUbZEqt8OtX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724391387388,"user_tz":-540,"elapsed":2819,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"c101ac46-063f-4ef8-9eb3-8b763fae4516"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1GD_PgVVbQwtKHA-JKiZ7U34ZIfw2fm2URRgogNmnfy8',\n"," 'updatedRange': \"'シート1'!C2\",\n"," 'updatedRows': 1,\n"," 'updatedColumns': 1,\n"," 'updatedCells': 1}"]},"metadata":{},"execution_count":26}],"source":["sheet.update_acell('A2', 'Matt')\n","sheet.update_acell('B2', 30)\n","sheet.update_acell('C2', 'Titanic')"]},{"cell_type":"markdown","metadata":{"id":"UcWoEGXk9bLG"},"source":["Name | Age | Favourite Movie\n","-- | -- | --\n","Matt | 30 | Titanic\n","\n","シートを開いて，このようなシートが作成されていることを確認しましょう。"]},{"cell_type":"markdown","metadata":{"id":"o5T4u7J_P9__"},"source":["## 列と行のアドレス指定\n","\n","Googleスプレッドシートのセルのアドレス指定方法はExcelと同じです。Pythonのインデックスは `0` から始まりますが，Googleスプレッドシートの列と行のインデックスは `1` から始まることに注意しましょう。つまり最初の行や列のインデックスは `0` ではなく `1` です。\n","\n","`a1_to_rowcol` や `rowcol_to_a1` を使うと文字列形式のアドレスと `(列, 行)` のタプル形式のアドレスを相互変換できます。"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"zm6aYpcUT9sZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724391647182,"user_tz":-540,"elapsed":480,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"94b72441-f0c3-4a64-c1cf-d3d67cb6d83b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 1)"]},"metadata":{},"execution_count":27}],"source":["from gspread.utils import a1_to_rowcol, rowcol_to_a1\n","\n","a1_to_rowcol('A2')"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"NbO3iVFZUIyN","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1724391651103,"user_tz":-540,"elapsed":432,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"de19f1e0-588d-46a8-ad34-6993cb483252"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'A2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":28}],"source":["rowcol_to_a1(2, 1)"]},{"cell_type":"markdown","metadata":{"id":"P-hg2B3fVghp"},"source":["## 列や行全体を読み書きする\n","\n","`Spreadsheet` オブジェクトが最初に読み込まれたとき `Worksheet` オブジェクトのすべてのデータが読み見込まれているため，セルの値を読み出すのは瞬時です。一方でセルの値をスプレッドシートに書き込むのにはネットワーク接続が必要なので，1秒程度の時間がかかります。たくさんのセルを一気に更新すると，かなり時間がかかります。\n","\n","そのため `Worksheet` には列や行全体のデータを一度に読み書きするメソッドがあります。 `col_values()` `row_values()` はそれぞれ列と行全体を読み込み `update()` メソッドに範囲を指定することで一括で値を更新できます。\n","\n","まず準備として **スプレッドシートの属性** の章でサンプルのデータセットが登録されたスプレッドシートからコピーしてきたシートのURLを入力しましょう。"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"ZQAFJbTVVmAK","executionInfo":{"status":"ok","timestamp":1724392008515,"user_tz":-540,"elapsed":1078,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["url = 'https://docs.google.com/spreadsheets/d/1HM-y5Rl75iZLSk7fRqZgXNWMM8Dq3uN5wMScqrm6YPk/edit?gid=626564103#gid=626564103' # コピーしたスプレッドシートのURLを入力\n","workbook = gc.open_by_url(url)\n","titanic = workbook.worksheet('titanic')"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"8shaa4zZVnx3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724392013190,"user_tz":-540,"elapsed":513,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"3fdd801b-a925-4815-dcba-e4c6f3b19846"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['PassengerId',\n"," 'Survived',\n"," 'Pclass',\n"," 'Name',\n"," 'Sex',\n"," 'Age',\n"," 'SibSp',\n"," 'Parch',\n"," 'Ticket',\n"," 'Fare',\n"," 'Cabin',\n"," 'Embarked']"]},"metadata":{},"execution_count":30}],"source":["col_names = titanic.row_values(1)\n","col_names"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"3JLhpbJlatVf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724392019552,"user_tz":-540,"elapsed":427,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"c5c7221d-5375-48e8-f2fe-ff5e42c5223f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['PassengerId',\n"," '1',\n"," '2',\n"," '3',\n"," '4',\n"," '5',\n"," '6',\n"," '7',\n"," '8',\n"," '9',\n"," '10',\n"," '11',\n"," '12',\n"," '13',\n"," '14',\n"," '15',\n"," '16',\n"," '17',\n"," '18',\n"," '19',\n"," '20',\n"," '21',\n"," '22',\n"," '23',\n"," '24',\n"," '25',\n"," '26',\n"," '27',\n"," '28',\n"," '29',\n"," '30',\n"," '31',\n"," '32',\n"," '33',\n"," '34',\n"," '35',\n"," '36',\n"," '37',\n"," '38',\n"," '39',\n"," '40',\n"," '41',\n"," '42',\n"," '43',\n"," '44',\n"," '45',\n"," '46',\n"," '47',\n"," '48',\n"," '49',\n"," '50',\n"," '51',\n"," '52',\n"," '53',\n"," '54',\n"," '55',\n"," '56',\n"," '57',\n"," '58',\n"," '59',\n"," '60',\n"," '61',\n"," '62',\n"," '63',\n"," '64',\n"," '65',\n"," '66',\n"," '67',\n"," '68',\n"," '69',\n"," '70',\n"," '71',\n"," '72',\n"," '73',\n"," '74',\n"," '75',\n"," '76',\n"," '77',\n"," '78',\n"," '79',\n"," '80',\n"," '81',\n"," '82',\n"," '83',\n"," '84',\n"," '85',\n"," '86',\n"," '87',\n"," '88',\n"," '89',\n"," '90',\n"," '91',\n"," '92',\n"," '93',\n"," '94',\n"," '95',\n"," '96',\n"," '97',\n"," '98',\n"," '99',\n"," '100',\n"," '101',\n"," '102',\n"," '103',\n"," '104',\n"," '105',\n"," '106',\n"," '107',\n"," '108',\n"," '109',\n"," '110',\n"," '111',\n"," '112',\n"," '113',\n"," '114',\n"," '115',\n"," '116',\n"," '117',\n"," '118',\n"," '119',\n"," '120',\n"," '121',\n"," '122',\n"," '123',\n"," '124',\n"," '125',\n"," '126',\n"," '127',\n"," '128',\n"," '129',\n"," '130',\n"," '131',\n"," '132',\n"," '133',\n"," '134',\n"," '135',\n"," '136',\n"," '137',\n"," '138',\n"," '139',\n"," '140',\n"," '141',\n"," '142',\n"," '143',\n"," '144',\n"," '145',\n"," '146',\n"," '147',\n"," '148',\n"," '149',\n"," '150',\n"," '151',\n"," '152',\n"," '153',\n"," '154',\n"," '155',\n"," '156',\n"," '157',\n"," '158',\n"," '159',\n"," '160',\n"," '161',\n"," '162',\n"," '163',\n"," '164',\n"," '165',\n"," '166',\n"," '167',\n"," '168',\n"," '169',\n"," '170',\n"," '171',\n"," '172',\n"," '173',\n"," '174',\n"," '175',\n"," '176',\n"," '177',\n"," '178',\n"," '179',\n"," '180',\n"," '181',\n"," '182',\n"," '183',\n"," '184',\n"," '185',\n"," '186',\n"," '187',\n"," '188',\n"," '189',\n"," '190',\n"," '191',\n"," '192',\n"," '193',\n"," '194',\n"," '195',\n"," '196',\n"," '197',\n"," '198',\n"," '199',\n"," '200',\n"," '201',\n"," '202',\n"," '203',\n"," '204',\n"," '205',\n"," '206',\n"," '207',\n"," '208',\n"," '209',\n"," '210',\n"," '211',\n"," '212',\n"," '213',\n"," '214',\n"," '215',\n"," '216',\n"," '217',\n"," '218',\n"," '219',\n"," '220',\n"," '221',\n"," '222',\n"," '223',\n"," '224',\n"," '225',\n"," '226',\n"," '227',\n"," '228',\n"," '229',\n"," '230',\n"," '231',\n"," '232',\n"," '233',\n"," '234',\n"," '235',\n"," '236',\n"," '237',\n"," '238',\n"," '239',\n"," '240',\n"," '241',\n"," '242',\n"," '243',\n"," '244',\n"," '245',\n"," '246',\n"," '247',\n"," '248',\n"," '249',\n"," '250',\n"," '251',\n"," '252',\n"," '253',\n"," '254',\n"," '255',\n"," '256',\n"," '257',\n"," '258',\n"," '259',\n"," '260',\n"," '261',\n"," '262',\n"," '263',\n"," '264',\n"," '265',\n"," '266',\n"," '267',\n"," '268',\n"," '269',\n"," '270',\n"," '271',\n"," '272',\n"," '273',\n"," '274',\n"," '275',\n"," '276',\n"," '277',\n"," '278',\n"," '279',\n"," '280',\n"," '281',\n"," '282',\n"," '283',\n"," '284',\n"," '285',\n"," '286',\n"," '287',\n"," '288',\n"," '289',\n"," '290',\n"," '291',\n"," '292',\n"," '293',\n"," '294',\n"," '295',\n"," '296',\n"," '297',\n"," '298',\n"," '299',\n"," '300',\n"," '301',\n"," '302',\n"," '303',\n"," '304',\n"," '305',\n"," '306',\n"," '307',\n"," '308',\n"," '309',\n"," '310',\n"," '311',\n"," '312',\n"," '313',\n"," '314',\n"," '315',\n"," '316',\n"," '317',\n"," '318',\n"," '319',\n"," '320',\n"," '321',\n"," '322',\n"," '323',\n"," '324',\n"," '325',\n"," '326',\n"," '327',\n"," '328',\n"," '329',\n"," '330',\n"," '331',\n"," '332',\n"," '333',\n"," '334',\n"," '335',\n"," '336',\n"," '337',\n"," '338',\n"," '339',\n"," '340',\n"," '341',\n"," '342',\n"," '343',\n"," '344',\n"," '345',\n"," '346',\n"," '347',\n"," '348',\n"," '349',\n"," '350',\n"," '351',\n"," '352',\n"," '353',\n"," '354',\n"," '355',\n"," '356',\n"," '357',\n"," '358',\n"," '359',\n"," '360',\n"," '361',\n"," '362',\n"," '363',\n"," '364',\n"," '365',\n"," '366',\n"," '367',\n"," '368',\n"," '369',\n"," '370',\n"," '371',\n"," '372',\n"," '373',\n"," '374',\n"," '375',\n"," '376',\n"," '377',\n"," '378',\n"," '379',\n"," '380',\n"," '381',\n"," '382',\n"," '383',\n"," '384',\n"," '385',\n"," '386',\n"," '387',\n"," '388',\n"," '389',\n"," '390',\n"," '391',\n"," '392',\n"," '393',\n"," '394',\n"," '395',\n"," '396',\n"," '397',\n"," '398',\n"," '399',\n"," '400',\n"," '401',\n"," '402',\n"," '403',\n"," '404',\n"," '405',\n"," '406',\n"," '407',\n"," '408',\n"," '409',\n"," '410',\n"," '411',\n"," '412',\n"," '413',\n"," '414',\n"," '415',\n"," '416',\n"," '417',\n"," '418',\n"," '419',\n"," '420',\n"," '421',\n"," '422',\n"," '423',\n"," '424',\n"," '425',\n"," '426',\n"," '427',\n"," '428',\n"," '429',\n"," '430',\n"," '431',\n"," '432',\n"," '433',\n"," '434',\n"," '435',\n"," '436',\n"," '437',\n"," '438',\n"," '439',\n"," '440',\n"," '441',\n"," '442',\n"," '443',\n"," '444',\n"," '445',\n"," '446',\n"," '447',\n"," '448',\n"," '449',\n"," '450',\n"," '451',\n"," '452',\n"," '453',\n"," '454',\n"," '455',\n"," '456',\n"," '457',\n"," '458',\n"," '459',\n"," '460',\n"," '461',\n"," '462',\n"," '463',\n"," '464',\n"," '465',\n"," '466',\n"," '467',\n"," '468',\n"," '469',\n"," '470',\n"," '471',\n"," '472',\n"," '473',\n"," '474',\n"," '475',\n"," '476',\n"," '477',\n"," '478',\n"," '479',\n"," '480',\n"," '481',\n"," '482',\n"," '483',\n"," '484',\n"," '485',\n"," '486',\n"," '487',\n"," '488',\n"," '489',\n"," '490',\n"," '491',\n"," '492',\n"," '493',\n"," '494',\n"," '495',\n"," '496',\n"," '497',\n"," '498',\n"," '499',\n"," '500',\n"," '501',\n"," '502',\n"," '503',\n"," '504',\n"," '505',\n"," '506',\n"," '507',\n"," '508',\n"," '509',\n"," '510',\n"," '511',\n"," '512',\n"," '513',\n"," '514',\n"," '515',\n"," '516',\n"," '517',\n"," '518',\n"," '519',\n"," '520',\n"," '521',\n"," '522',\n"," '523',\n"," '524',\n"," '525',\n"," '526',\n"," '527',\n"," '528',\n"," '529',\n"," '530',\n"," '531',\n"," '532',\n"," '533',\n"," '534',\n"," '535',\n"," '536',\n"," '537',\n"," '538',\n"," '539',\n"," '540',\n"," '541',\n"," '542',\n"," '543',\n"," '544',\n"," '545',\n"," '546',\n"," '547',\n"," '548',\n"," '549',\n"," '550',\n"," '551',\n"," '552',\n"," '553',\n"," '554',\n"," '555',\n"," '556',\n"," '557',\n"," '558',\n"," '559',\n"," '560',\n"," '561',\n"," '562',\n"," '563',\n"," '564',\n"," '565',\n"," '566',\n"," '567',\n"," '568',\n"," '569',\n"," '570',\n"," '571',\n"," '572',\n"," '573',\n"," '574',\n"," '575',\n"," '576',\n"," '577',\n"," '578',\n"," '579',\n"," '580',\n"," '581',\n"," '582',\n"," '583',\n"," '584',\n"," '585',\n"," '586',\n"," '587',\n"," '588',\n"," '589',\n"," '590',\n"," '591',\n"," '592',\n"," '593',\n"," '594',\n"," '595',\n"," '596',\n"," '597',\n"," '598',\n"," '599',\n"," '600',\n"," '601',\n"," '602',\n"," '603',\n"," '604',\n"," '605',\n"," '606',\n"," '607',\n"," '608',\n"," '609',\n"," '610',\n"," '611',\n"," '612',\n"," '613',\n"," '614',\n"," '615',\n"," '616',\n"," '617',\n"," '618',\n"," '619',\n"," '620',\n"," '621',\n"," '622',\n"," '623',\n"," '624',\n"," '625',\n"," '626',\n"," '627',\n"," '628',\n"," '629',\n"," '630',\n"," '631',\n"," '632',\n"," '633',\n"," '634',\n"," '635',\n"," '636',\n"," '637',\n"," '638',\n"," '639',\n"," '640',\n"," '641',\n"," '642',\n"," '643',\n"," '644',\n"," '645',\n"," '646',\n"," '647',\n"," '648',\n"," '649',\n"," '650',\n"," '651',\n"," '652',\n"," '653',\n"," '654',\n"," '655',\n"," '656',\n"," '657',\n"," '658',\n"," '659',\n"," '660',\n"," '661',\n"," '662',\n"," '663',\n"," '664',\n"," '665',\n"," '666',\n"," '667',\n"," '668',\n"," '669',\n"," '670',\n"," '671',\n"," '672',\n"," '673',\n"," '674',\n"," '675',\n"," '676',\n"," '677',\n"," '678',\n"," '679',\n"," '680',\n"," '681',\n"," '682',\n"," '683',\n"," '684',\n"," '685',\n"," '686',\n"," '687',\n"," '688',\n"," '689',\n"," '690',\n"," '691',\n"," '692',\n"," '693',\n"," '694',\n"," '695',\n"," '696',\n"," '697',\n"," '698',\n"," '699',\n"," '700',\n"," '701',\n"," '702',\n"," '703',\n"," '704',\n"," '705',\n"," '706',\n"," '707',\n"," '708',\n"," '709',\n"," '710',\n"," '711',\n"," '712',\n"," '713',\n"," '714',\n"," '715',\n"," '716',\n"," '717',\n"," '718',\n"," '719',\n"," '720',\n"," '721',\n"," '722',\n"," '723',\n"," '724',\n"," '725',\n"," '726',\n"," '727',\n"," '728',\n"," '729',\n"," '730',\n"," '731',\n"," '732',\n"," '733',\n"," '734',\n"," '735',\n"," '736',\n"," '737',\n"," '738',\n"," '739',\n"," '740',\n"," '741',\n"," '742',\n"," '743',\n"," '744',\n"," '745',\n"," '746',\n"," '747',\n"," '748',\n"," '749',\n"," '750',\n"," '751',\n"," '752',\n"," '753',\n"," '754',\n"," '755',\n"," '756',\n"," '757',\n"," '758',\n"," '759',\n"," '760',\n"," '761',\n"," '762',\n"," '763',\n"," '764',\n"," '765',\n"," '766',\n"," '767',\n"," '768',\n"," '769',\n"," '770',\n"," '771',\n"," '772',\n"," '773',\n"," '774',\n"," '775',\n"," '776',\n"," '777',\n"," '778',\n"," '779',\n"," '780',\n"," '781',\n"," '782',\n"," '783',\n"," '784',\n"," '785',\n"," '786',\n"," '787',\n"," '788',\n"," '789',\n"," '790',\n"," '791',\n"," '792',\n"," '793',\n"," '794',\n"," '795',\n"," '796',\n"," '797',\n"," '798',\n"," '799',\n"," '800',\n"," '801',\n"," '802',\n"," '803',\n"," '804',\n"," '805',\n"," '806',\n"," '807',\n"," '808',\n"," '809',\n"," '810',\n"," '811',\n"," '812',\n"," '813',\n"," '814',\n"," '815',\n"," '816',\n"," '817',\n"," '818',\n"," '819',\n"," '820',\n"," '821',\n"," '822',\n"," '823',\n"," '824',\n"," '825',\n"," '826',\n"," '827',\n"," '828',\n"," '829',\n"," '830',\n"," '831',\n"," '832',\n"," '833',\n"," '834',\n"," '835',\n"," '836',\n"," '837',\n"," '838',\n"," '839',\n"," '840',\n"," '841',\n"," '842',\n"," '843',\n"," '844',\n"," '845',\n"," '846',\n"," '847',\n"," '848',\n"," '849',\n"," '850',\n"," '851',\n"," '852',\n"," '853',\n"," '854',\n"," '855',\n"," '856',\n"," '857',\n"," '858',\n"," '859',\n"," '860',\n"," '861',\n"," '862',\n"," '863',\n"," '864',\n"," '865',\n"," '866',\n"," '867',\n"," '868',\n"," '869',\n"," '870',\n"," '871',\n"," '872',\n"," '873',\n"," '874',\n"," '875',\n"," '876',\n"," '877',\n"," '878',\n"," '879',\n"," '880',\n"," '881',\n"," '882',\n"," '883',\n"," '884',\n"," '885',\n"," '886',\n"," '887',\n"," '888',\n"," '889',\n"," '890',\n"," '891']"]},"metadata":{},"execution_count":31}],"source":["titanic.col_values(1)"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"MkWgqq4ga0u2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724392054145,"user_tz":-540,"elapsed":419,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"df3bb83a-a2ff-48f1-814d-89f32bffc80b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['2',\n"," '1',\n"," '1',\n"," 'Cumings, Mrs. John Bradley (Florence Briggs Thayer)',\n"," 'female',\n"," '38',\n"," '1',\n"," '0',\n"," 'PC 17599',\n"," '71.2833',\n"," 'C85',\n"," 'C']"]},"metadata":{},"execution_count":32}],"source":["titanic.row_values(3)"]},{"cell_type":"markdown","metadata":{"id":"oYSVMJRjgbWQ"},"source":["列を一気に更新したいときは列の範囲を指定し，新しい列のリストを渡します。このとき与えるのは `new_row` ではなく `[new_row]` つまり「リストのリスト」になっていることに注意します。"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"D93ec45kbiMV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724392084614,"user_tz":-540,"elapsed":977,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"02ad30a2-a7c9-4ebb-b7ff-bb404ac1d837"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-33-0fb209b1c056>:14: DeprecationWarning: The order of arguments in worksheet.update() has changed. Please pass values first and range_name secondor used named arguments (range_name=, values=)\n","  titanic.update('A3:L3', [new_row])\n"]},{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1HM-y5Rl75iZLSk7fRqZgXNWMM8Dq3uN5wMScqrm6YPk',\n"," 'updatedRange': 'titanic!A3:L3',\n"," 'updatedRows': 1,\n"," 'updatedColumns': 12,\n"," 'updatedCells': 12}"]},"metadata":{},"execution_count":33}],"source":["new_row = [\n"," '2',\n"," '0',\n"," '0',\n"," 'Cumings, Mrs. John Bradley (Florence Briggs Thayer)',\n"," 'female',\n"," '38',\n"," '1',\n"," '0',\n"," 'PC 17599',\n"," '71.2833',\n"," 'C85',\n"," 'C']\n","titanic.update('A3:L3', [new_row])"]},{"cell_type":"markdown","metadata":{"id":"G8U5aIxlh0Se"},"source":["同様に列を一括で更新しましょう。今回は `col_names.index('Name')` で `Name` が入っているカラムの添字を取り出します。スプレッドシートの添字は1から始まるので `+1` し，乗客の名前すべてを取り出しましょう。"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"A_Ebohutb4GW","executionInfo":{"status":"ok","timestamp":1724392138799,"user_tz":-540,"elapsed":451,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["names = titanic.col_values(col_names.index('Name') + 1)"]},{"cell_type":"markdown","metadata":{"id":"9fVtDF6fi5j0"},"source":["`upper()` メソッドを使ってそれぞれの名前を大文字にし `capital_names` に格納します。列を一括で更新する場合，リストのリスト，つまり入れ子のリストになることに注意します。"]},{"cell_type":"code","execution_count":36,"metadata":{"id":"U5GdiuhRg9qv","executionInfo":{"status":"ok","timestamp":1724392297087,"user_tz":-540,"elapsed":417,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["capital_names = []\n","for name in names:\n","    capital_name = name.upper()\n","    capital_names.append([capital_name])"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"VSxq_bTCi2Hg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724392300756,"user_tz":-540,"elapsed":971,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"88fe7141-3705-49e8-93b8-f8cab0fed3cf"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-37-656f303adb25>:1: DeprecationWarning: The order of arguments in worksheet.update() has changed. Please pass values first and range_name secondor used named arguments (range_name=, values=)\n","  titanic.update('D2', capital_names)\n"]},{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1HM-y5Rl75iZLSk7fRqZgXNWMM8Dq3uN5wMScqrm6YPk',\n"," 'updatedRange': 'titanic!D2:D893',\n"," 'updatedRows': 892,\n"," 'updatedColumns': 1,\n"," 'updatedCells': 892}"]},"metadata":{},"execution_count":37}],"source":["titanic.update('D2', capital_names)"]},{"cell_type":"markdown","metadata":{"id":"caMSQWnastXG"},"source":["## Pandasを使った読み書き\n","\n","しかしながら少し高度な集計や更新をしようとすると，Pandasを使いたくなるでしょう。 `gspread` にはPandasとの連携機能もあります。`get_all_records()` メソッドを使うと直接 `DataFrame` を作成できます。"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"vlT5z1PPoEEY","colab":{"base_uri":"https://localhost:8080/","height":930},"executionInfo":{"status":"ok","timestamp":1724392620257,"user_tz":-540,"elapsed":2309,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"fa6fd5a9-ac7e-4ed5-d738-8a15b3eb579e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    PassengerId Survived Pclass  \\\n","0             1        0      3   \n","1             2        0      0   \n","2             3        1      3   \n","3             4        1      1   \n","4             5        0      3   \n","..          ...      ...    ...   \n","887         888        1      1   \n","888         889        0      3   \n","889         890        1      1   \n","890         891        0      3   \n","891                               \n","\n","                                                  Name     Sex Age SibSp  \\\n","0                                                 NAME    male  22     1   \n","1                              BRAUND, MR. OWEN HARRIS  female  38     1   \n","2    CUMINGS, MRS. JOHN BRADLEY (FLORENCE BRIGGS TH...  female  26     0   \n","3                               HEIKKINEN, MISS. LAINA  female  35     1   \n","4         FUTRELLE, MRS. JACQUES HEATH (LILY MAY PEEL)    male  35     0   \n","..                                                 ...     ...  ..   ...   \n","887                              MONTVILA, REV. JUOZAS  female  19     0   \n","888                       GRAHAM, MISS. MARGARET EDITH  female         1   \n","889           JOHNSTON, MISS. CATHERINE HELEN \"CARRIE\"    male  26     0   \n","890                              BEHR, MR. KARL HOWELL    male  32     0   \n","891                                DOOLEY, MR. PATRICK                     \n","\n","    Parch            Ticket     Fare Cabin Embarked  \n","0       0         A/5 21171     7.25              S  \n","1       0          PC 17599  71.2833   C85        C  \n","2       0  STON/O2. 3101282    7.925              S  \n","3       0            113803     53.1  C123        S  \n","4       0            373450     8.05              S  \n","..    ...               ...      ...   ...      ...  \n","887     0            112053       30   B42        S  \n","888     2        W./C. 6607    23.45              S  \n","889     0            111369       30  C148        C  \n","890     0            370376     7.75              Q  \n","891                                                  \n","\n","[892 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-2ae7579f-e0c5-4718-a10f-c6ed8d10fc7f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NAME</td>\n","      <td>male</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.25</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>BRAUND, MR. OWEN HARRIS</td>\n","      <td>female</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>CUMINGS, MRS. JOHN BRADLEY (FLORENCE BRIGGS TH...</td>\n","      <td>female</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.925</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>HEIKKINEN, MISS. LAINA</td>\n","      <td>female</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>FUTRELLE, MRS. JACQUES HEATH (LILY MAY PEEL)</td>\n","      <td>male</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.05</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>MONTVILA, REV. JUOZAS</td>\n","      <td>female</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30</td>\n","      <td>B42</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>GRAHAM, MISS. MARGARET EDITH</td>\n","      <td>female</td>\n","      <td></td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.45</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>JOHNSTON, MISS. CATHERINE HELEN \"CARRIE\"</td>\n","      <td>male</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30</td>\n","      <td>C148</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>BEHR, MR. KARL HOWELL</td>\n","      <td>male</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.75</td>\n","      <td></td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>891</th>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>DOOLEY, MR. PATRICK</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>892 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ae7579f-e0c5-4718-a10f-c6ed8d10fc7f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ae7579f-e0c5-4718-a10f-c6ed8d10fc7f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ae7579f-e0c5-4718-a10f-c6ed8d10fc7f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c9f96312-d401-4f14-8de2-ae4be22655e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9f96312-d401-4f14-8de2-ae4be22655e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c9f96312-d401-4f14-8de2-ae4be22655e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b7849217-b500-450c-9592-b888a20051cb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b7849217-b500-450c-9592-b888a20051cb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 892,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000001\",\n        \"max\": \"1970-01-01 00:00:00.000000891\",\n        \"num_unique_values\": 892,\n        \"samples\": [\n          711,\n          441,\n          526\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00\",\n        \"max\": \"1970-01-01 00:00:00.000000001\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          \"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00\",\n        \"max\": \"1970-01-01 00:00:00.000000003\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0,\n          \"\",\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 892,\n        \"samples\": [\n          \"MOUBAREK, MASTER. HALIM GONIOS (\\\"WILLIAM GEORGE\\\")\",\n          \"KVILLNER, MR. JOHAN HENRIK JOHANNESSON\",\n          \"KASSEM, MR. FARED\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"male\",\n          \"female\",\n          \"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00\",\n        \"max\": \"1970-01-01 00:00:00.000000080\",\n        \"num_unique_values\": 89,\n        \"samples\": [\n          59,\n          36.5,\n          28.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00\",\n        \"max\": \"1970-01-01 00:00:00.000000008\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0,\n          5,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00\",\n        \"max\": \"1970-01-01 00:00:00.000000006\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 682,\n        \"samples\": [\n          \"PC 17611\",\n          35851,\n          26707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00\",\n        \"max\": \"1970-01-01 00:00:00.000000512\",\n        \"num_unique_values\": 249,\n        \"samples\": [\n          12.875,\n          51.8625,\n          20.525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 148,\n        \"samples\": [\n          \"B101\",\n          \"A19\",\n          \"B69\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"C\",\n          \"\",\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}],"source":["import pandas as pd\n","df = pd.DataFrame(titanic.get_all_records())\n","df"]},{"cell_type":"markdown","metadata":{"id":"fqxllzrUtjOo"},"source":["運賃を2倍してみます。"]},{"cell_type":"code","execution_count":39,"metadata":{"id":"3mYntN47tKP3","executionInfo":{"status":"ok","timestamp":1724392630194,"user_tz":-540,"elapsed":418,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}}},"outputs":[],"source":["df[\"Fare\"] = df[\"Fare\"] * 2"]},{"cell_type":"markdown","metadata":{"id":"eY04aK4jtlyt"},"source":["更新した `DataFrame` をアップロードするには以下のようなコードを使います。このコードはシート全体を `DataFrame` で置き換えます。毎回の作業ごとにアップロードするのではなく `DataFrame` 上での作業が終了したらアップロードするようにしましょう。"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"9FvcOdsxohcD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724392634929,"user_tz":-540,"elapsed":1002,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"f40baffb-6cc5-4e01-ba13-6780e2a2f8df"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1HM-y5Rl75iZLSk7fRqZgXNWMM8Dq3uN5wMScqrm6YPk',\n"," 'updatedRange': 'titanic!A1:L893',\n"," 'updatedRows': 893,\n"," 'updatedColumns': 12,\n"," 'updatedCells': 10716}"]},"metadata":{},"execution_count":40}],"source":["titanic.update([df.columns.values.tolist()] + df.values.tolist())"]},{"cell_type":"markdown","metadata":{"id":"3oDRLeXedtbL"},"source":["# 確認テスト\n","\n","1から1,000までの数が書かれたくじを考えます。ここでは1回引いたくじは箱の中に戻します。Pythonでこのくじについての実験を行うことを考えます。 `random` モジュールの `random.choice()` を使うとあるリストから要素をひとつ取り出してくることができます。"]},{"cell_type":"markdown","metadata":{"id":"_2-6QCR3gcGz"},"source":["## (1) 10,000回くじを引く\n","\n","Pythonの `random` はほんとうにランダムでしょうか。これを確かめるために，以下の手順に従ってプログラムを完成させ，問いに答えてください。\n","\n","1. くじから数字を10,000回取り出し，結果をリストに保存する\n","1. 結果をPandasの `DataFrame` に変換する\n","1. [1から1000までの数のシート](https://drive.google.com/file/d/1NOsZ8D2OStT3yoZixO7OBmRgTd9HoDAb/view?usp=sharing) を開き，自分のGoogleスプレッドシートにコピーする\n","2. コピーしたスプレッドシートを開き `random_result` という名前のシートを追加する\n","3. 2で作った `DataFrame` をアップロードする\n","\n","上記のコードが完成したらプログラムを実行しましょう。実行後、当該のスプレッドシートを開いて以下の手順を続けてください。\n","\n","1. 「結果」シートの `B2` セルに `=countif(random_result!B2:B10001, A2)` をコピーして貼り付ける\n","1. セルの右下にカーソルを動かし，カーソルが `+` に変わるのを確認する\n","1. 確認できたらダブルクリックし，式が `B` 列の最下まで入力されるのを確認する\n","1. グラフが描画されていることを確認する\n","1. くじの数字の出現回数の期待値をグラフから読み取る\n","\n","確認テストの回答欄には **「くじの数字の出現回数の期待値」** を数字で入力してください。\n","\n","> 【こみみ情報】\n",">\n","> 数学的な性質を知っていればこの答えはすぐに導き出すことができます"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"J5ayQme8lqS5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724394025476,"user_tz":-540,"elapsed":3230,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"1e914499-30e6-45ad-cb4b-81e9c60653f5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'spreadsheetId': '1TkhgYggfrsP-tB86xEBQLDa97qvlcFIWWcykzlKyp2M',\n"," 'updatedRange': 'random_result!A1:B10001',\n"," 'updatedRows': 10001,\n"," 'updatedColumns': 2,\n"," 'updatedCells': 20002}"]},"metadata":{},"execution_count":42}],"source":["import random\n","import pandas as pd\n","random.seed(100)\n","\n","results = []\n","lottery = list(range(1, 1000 + 1)) # 1から1000までの数が含まれているくじ\n","for i in range(1, 10000 + 1):\n","    selected = random.choice(lottery)# lotteryから数字を取り出してきて selected に格納する\n","    result = (i, selected)\n","    results.append(result)\n","\n","# url = 'https://drive.google.com/file/d/1NOsZ8D2OStT3yoZixO7OBmRgTd9HoDAb/view?usp=sharing'\n","url = 'https://docs.google.com/spreadsheets/d/1TkhgYggfrsP-tB86xEBQLDa97qvlcFIWWcykzlKyp2M/edit?gid=1502896022#gid=1502896022'\n","workbook = gc.open_by_url(url)\n","worksheet = workbook.add_worksheet(title=\"random_result\", rows=1003, cols=4)# ワークシートを追加する。rowsとcolsを正しく指定しましょう。\n","df = pd.DataFrame(results, columns=[\"number\", \"times\"])\n","# 追加したワークシートを df で置き換える\n","worksheet.update([df.columns.values.tolist()] + df.values.tolist())"]},{"cell_type":"markdown","metadata":{"id":"CX2MFKKLv1vS"},"source":["## (2) 1000回引けばあたりは出るか\n","\n","Pythonの `random` がランダムであることはわかりましたか。それでは実際にくじをひきましょう。ここでは `777` があたりのくじとします。今回の例で，このくじを1000回引いたときに、**「あたりを引く確率」**を答えてください。以下のサンプルコードを使いましょう。回答は四捨五入し、0~100の間の整数で入力してください。単位は \"%\" です。"]},{"cell_type":"code","execution_count":51,"metadata":{"id":"vYL5mIpcoQT9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724395096103,"user_tz":-540,"elapsed":1871,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"09c41d78-4010-47b2-f156-2336fff28cd5"},"outputs":[{"output_type":"stream","name":"stdout","text":["3 はずれでした\n","4 はずれでした\n","7 はずれでした\n","12 はずれでした\n","14 はずれでした\n","16 はずれでした\n","17 はずれでした\n","18 はずれでした\n","21 はずれでした\n","25 はずれでした\n","27 はずれでした\n","28 はずれでした\n","30 はずれでした\n","31 はずれでした\n","36 はずれでした\n","37 はずれでした\n","39 はずれでした\n","42 はずれでした\n","43 はずれでした\n","45 はずれでした\n","51 はずれでした\n","52 はずれでした\n","55 はずれでした\n","62 はずれでした\n","72 はずれでした\n","75 はずれでした\n","77 はずれでした\n","81 はずれでした\n","95 はずれでした\n","96 はずれでした\n","97 はずれでした\n","101 はずれでした\n","103 はずれでした\n","107 はずれでした\n","108 はずれでした\n","110 はずれでした\n","111 はずれでした\n","112 はずれでした\n","113 はずれでした\n","114 はずれでした\n","116 はずれでした\n","118 はずれでした\n","121 はずれでした\n","122 はずれでした\n","124 はずれでした\n","127 はずれでした\n","128 はずれでした\n","131 はずれでした\n","132 はずれでした\n","134 はずれでした\n","135 はずれでした\n","136 はずれでした\n","138 はずれでした\n","139 はずれでした\n","141 はずれでした\n","143 はずれでした\n","144 はずれでした\n","145 はずれでした\n","146 はずれでした\n","147 はずれでした\n","149 はずれでした\n","152 はずれでした\n","155 はずれでした\n","156 はずれでした\n","157 はずれでした\n","158 はずれでした\n","161 はずれでした\n","162 はずれでした\n","166 はずれでした\n","173 はずれでした\n","174 はずれでした\n","177 はずれでした\n","178 はずれでした\n","179 はずれでした\n","183 はずれでした\n","187 はずれでした\n","191 はずれでした\n","192 はずれでした\n","195 はずれでした\n","196 はずれでした\n","200 はずれでした\n","201 はずれでした\n","202 はずれでした\n","203 はずれでした\n","207 はずれでした\n","208 はずれでした\n","210 はずれでした\n","211 はずれでした\n","216 はずれでした\n","224 はずれでした\n","225 はずれでした\n","226 はずれでした\n","227 はずれでした\n","228 はずれでした\n","229 はずれでした\n","233 はずれでした\n","234 はずれでした\n","236 はずれでした\n","237 はずれでした\n","243 はずれでした\n","245 はずれでした\n","246 はずれでした\n","247 はずれでした\n","251 はずれでした\n","256 はずれでした\n","259 はずれでした\n","262 はずれでした\n","263 はずれでした\n","264 はずれでした\n","265 はずれでした\n","267 はずれでした\n","268 はずれでした\n","269 はずれでした\n","274 はずれでした\n","278 はずれでした\n","284 はずれでした\n","285 はずれでした\n","289 はずれでした\n","291 はずれでした\n","293 はずれでした\n","295 はずれでした\n","297 はずれでした\n","299 はずれでした\n","300 はずれでした\n","303 はずれでした\n","306 はずれでした\n","321 はずれでした\n","322 はずれでした\n","327 はずれでした\n","330 はずれでした\n","332 はずれでした\n","337 はずれでした\n","339 はずれでした\n","340 はずれでした\n","341 はずれでした\n","343 はずれでした\n","345 はずれでした\n","347 はずれでした\n","348 はずれでした\n","350 はずれでした\n","358 はずれでした\n","359 はずれでした\n","360 はずれでした\n","362 はずれでした\n","363 はずれでした\n","376 はずれでした\n","378 はずれでした\n","382 はずれでした\n","383 はずれでした\n","388 はずれでした\n","391 はずれでした\n","392 はずれでした\n","393 はずれでした\n","395 はずれでした\n","396 はずれでした\n","397 はずれでした\n","400 はずれでした\n","403 はずれでした\n","406 はずれでした\n","407 はずれでした\n","409 はずれでした\n","412 はずれでした\n","416 はずれでした\n","417 はずれでした\n","418 はずれでした\n","423 はずれでした\n","427 はずれでした\n","432 はずれでした\n","434 はずれでした\n","435 はずれでした\n","437 はずれでした\n","439 はずれでした\n","441 はずれでした\n","443 はずれでした\n","445 はずれでした\n","446 はずれでした\n","448 はずれでした\n","449 はずれでした\n","450 はずれでした\n","451 はずれでした\n","452 はずれでした\n","454 はずれでした\n","459 はずれでした\n","460 はずれでした\n","461 はずれでした\n","463 はずれでした\n","466 はずれでした\n","467 はずれでした\n","472 はずれでした\n","474 はずれでした\n","475 はずれでした\n","478 はずれでした\n","481 はずれでした\n","483 はずれでした\n","484 はずれでした\n","485 はずれでした\n","493 はずれでした\n","496 はずれでした\n","497 はずれでした\n","498 はずれでした\n","501 はずれでした\n","509 はずれでした\n","513 はずれでした\n","516 はずれでした\n","517 はずれでした\n","520 はずれでした\n","522 はずれでした\n","533 はずれでした\n","534 はずれでした\n","535 はずれでした\n","541 はずれでした\n","546 はずれでした\n","548 はずれでした\n","555 はずれでした\n","557 はずれでした\n","559 はずれでした\n","562 はずれでした\n","565 はずれでした\n","567 はずれでした\n","569 はずれでした\n","570 はずれでした\n","573 はずれでした\n","578 はずれでした\n","579 はずれでした\n","582 はずれでした\n","583 はずれでした\n","584 はずれでした\n","586 はずれでした\n","589 はずれでした\n","591 はずれでした\n","592 はずれでした\n","594 はずれでした\n","600 はずれでした\n","609 はずれでした\n","610 はずれでした\n","612 はずれでした\n","615 はずれでした\n","617 はずれでした\n","627 はずれでした\n","628 はずれでした\n","629 はずれでした\n","631 はずれでした\n","633 はずれでした\n","636 はずれでした\n","637 はずれでした\n","640 はずれでした\n","641 はずれでした\n","642 はずれでした\n","644 はずれでした\n","646 はずれでした\n","651 はずれでした\n","654 はずれでした\n","655 はずれでした\n","657 はずれでした\n","659 はずれでした\n","663 はずれでした\n","664 はずれでした\n","668 はずれでした\n","669 はずれでした\n","671 はずれでした\n","673 はずれでした\n","677 はずれでした\n","681 はずれでした\n","686 はずれでした\n","690 はずれでした\n","693 はずれでした\n","696 はずれでした\n","701 はずれでした\n","702 はずれでした\n","705 はずれでした\n","708 はずれでした\n","709 はずれでした\n","712 はずれでした\n","719 はずれでした\n","720 はずれでした\n","721 はずれでした\n","726 はずれでした\n","727 はずれでした\n","729 はずれでした\n","730 はずれでした\n","734 はずれでした\n","735 はずれでした\n","738 はずれでした\n","745 はずれでした\n","747 はずれでした\n","748 はずれでした\n","750 はずれでした\n","751 はずれでした\n","759 はずれでした\n","763 はずれでした\n","764 はずれでした\n","766 はずれでした\n","767 はずれでした\n","768 はずれでした\n","771 はずれでした\n","772 はずれでした\n","773 はずれでした\n","778 はずれでした\n","779 はずれでした\n","780 はずれでした\n","781 はずれでした\n","784 はずれでした\n","786 はずれでした\n","789 はずれでした\n","790 はずれでした\n","791 はずれでした\n","792 はずれでした\n","794 はずれでした\n","795 はずれでした\n","796 はずれでした\n","797 はずれでした\n","802 はずれでした\n","803 はずれでした\n","808 はずれでした\n","809 はずれでした\n","815 はずれでした\n","816 はずれでした\n","825 はずれでした\n","828 はずれでした\n","830 はずれでした\n","831 はずれでした\n","833 はずれでした\n","834 はずれでした\n","836 はずれでした\n","837 はずれでした\n","838 はずれでした\n","839 はずれでした\n","842 はずれでした\n","844 はずれでした\n","845 はずれでした\n","849 はずれでした\n","850 はずれでした\n","853 はずれでした\n","854 はずれでした\n","857 はずれでした\n","859 はずれでした\n","860 はずれでした\n","863 はずれでした\n","865 はずれでした\n","866 はずれでした\n","870 はずれでした\n","874 はずれでした\n","875 はずれでした\n","884 はずれでした\n","885 はずれでした\n","891 はずれでした\n","892 はずれでした\n","894 はずれでした\n","895 はずれでした\n","897 はずれでした\n","898 はずれでした\n","901 はずれでした\n","903 はずれでした\n","908 はずれでした\n","910 はずれでした\n","913 はずれでした\n","915 はずれでした\n","916 はずれでした\n","917 はずれでした\n","918 はずれでした\n","919 はずれでした\n","920 はずれでした\n","921 はずれでした\n","922 はずれでした\n","923 はずれでした\n","924 はずれでした\n","925 はずれでした\n","927 はずれでした\n","932 はずれでした\n","933 はずれでした\n","934 はずれでした\n","937 はずれでした\n","939 はずれでした\n","942 はずれでした\n","943 はずれでした\n","944 はずれでした\n","948 はずれでした\n","949 はずれでした\n","952 はずれでした\n","957 はずれでした\n","959 はずれでした\n","960 はずれでした\n","966 はずれでした\n","968 はずれでした\n","970 はずれでした\n","975 はずれでした\n","978 はずれでした\n","987 はずれでした\n","988 はずれでした\n","989 はずれでした\n","992 はずれでした\n"]}],"source":["import random\n","random.seed(100)\n","\n","length = 1000\n","lottery = list(range(1, length + 1))  # 1から1000までの数が含まれている\n","results = []\n","times = 1000\n","lucky_number = 777\n","\n","for i in range(times):\n","    for j in range(length):\n","        selected = random.choice(lottery)# lotteryから数字を取り出してきて selected に格納する\n","        if selected == lucky_number:\n","            results.append(j)# results に値を格納する\n","            break\n","    else:\n","        print(i, \"はずれでした\")"]},{"cell_type":"code","execution_count":52,"metadata":{"id":"LmNsonANdtbM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724395098686,"user_tz":-540,"elapsed":5,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"c0516adc-7c22-4104-fd93-2e339fb3508e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["60.9"]},"metadata":{},"execution_count":52}],"source":["# 確率の計算\n","# 回答は四捨五入し、0~100の間の整数で入力してください。単位は \"%\" です。\n","len(results) / length * 100"]},{"cell_type":"code","source":["1-0.999**1000"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fs96jn6B7Xu7","executionInfo":{"status":"ok","timestamp":1724394931641,"user_tz":-540,"elapsed":445,"user":{"displayName":"藤原大喜","userId":"17987110239979405001"}},"outputId":"3bbf1b90-daaa-40c3-d792-0d14300096b6"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6323045752290363"]},"metadata":{},"execution_count":50}]}],"metadata":{"colab":{"provenance":[{"file_id":"12VIG0QGZ7CGNPr8Kn_UFLjEuYiXI36rn","timestamp":1724386829371}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.6"}},"nbformat":4,"nbformat_minor":0}